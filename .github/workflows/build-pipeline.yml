name: Build Envds Package

on:
  push:
    branches: [ dev-* , add-envds-package-workflow']
    paths:
  
  pull_request:
    branches: [main, dev-*]
    paths:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: envds-base-image

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        cd code/envds
        python -m pip install --upgrade pip setuptools wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run package creation
      run: |
        cd code/envds
        python -m pip install --user --upgrade build
        python -m build
    
    - name: Archive packages
      uses: actions/upload-artifact@v4
      with:
        name: envds
        path: code/envds/dist
  
  create-base-image:
    runs-on: ubuntu-latest
    needs:
      - build
    
    defaults:
        run:
            working-directory: './code/envds'
      
    permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write

    steps:
      - name: Retrieve artifact
        uses: actions/download-artifact@v4
        with:
          name: envds
          path: code/envds/dist

      - name: 'Checkout Main'
        uses: actions/checkout@v4

      - name: 'set env variables'
        run: |
          VER=$(cat VERSION)
          echo "IMAGE_TAG=$VER" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build and push multi-platform image
        uses: docker/build-push-action@v4
        with:
          context: code/envds/.
          # dockerfile: code/apps/daq/sensors/AerosolDynamics/MAGIC250/Dockerfile
          push: true
          tags: |
            ghcr.io/noaa-pmel/msp/envds-base:${{env.IMAGE_TAG}}
          platforms: linux/amd64,linux/arm64
          
  