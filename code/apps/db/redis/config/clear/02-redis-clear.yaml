# apiVersion: v1
# kind: Namespace
# metadata:
#   name: envds-clear
#   labels:
#     name: envds-clear
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv-volume-clear
  namespace: default
  labels:
    type: local
spec:
  storageClassName: local-path
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/envds/redis/clear"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pv-claim
  namespace: default
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: redis-config
#   namespace: default
#   labels:
#     app: redis
#   # namespace: envds-clear
# data:
#   mosquitto.conf: |
#     sys_interval 1
#     autosave_interval 1
#     allow_anonymous true
#     autosave_on_changes true
#     # logs
#     log_dest stdout
#     log_type all
#     log_timestamp true
#     log_timestamp_format %Y-%m-%d_%H:%M:%S
#     connection_messages true
#     # data
#     persistence true
#     persistence_location /mosquitto/data/
#     persistence_file mosquitto.db

#     # Non-TLS
#     listener 1883
#     protocol mqtt

#     # # TLS
#     # # https://mosquitto.org/man/mosquitto-tls-7.html
#     # listener 8883
#     # protocol mqtt
#     # cafile /certs/ca.crt
#     # certfile /certs/server.crt
#     # keyfile /certs/server.key
#     # require_certificate false
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: default
  labels:
    app: redis
  # namespace: envds-clear
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        # image: localhost:5000/envds/eclipse-mosquitto:2.0.14
        # image: envds-registry:36301/eclipse-mosquitto:2.0.14
        # image: envds-registry:5000/core/eclipse-mosquitto:2.0.14
        # image: envds-registry:5000/core/redis-stack-server:latest
        image: envds-registry-clear:5000/envds/redis-stack-server:latest
        # command:
        #   - redis-server
        #   - "/etc/redis-stack.conf"
        env:
        - name: REDIS_ARGS
          value: "--appendonly yes"
        resources:
          requests:
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        ports:
        - name: http
          containerPort: 6379
          protocol: TCP
        volumeMounts:
          - name: redis-pv-storage
            mountPath: /data
          # - name: redis-config
          #   mountPath: /redis-stack.conf
            # subPath: redis-stack.conf
      volumes:
        - name: redis-pv-storage
          persistentVolumeClaim:
            claimName: redis-pv-claim
        # - name: redis-config
        #   configMap:
        #     name: redis-config
            # defaultMode: 0666
      #   volumeMounts:
      #       - name: mosquitto-config
      #         mountPath: /mosquitto/config/mosquitto.conf
      #         subPath: mosquitto.conf
      # volumes:
      #   - name: mosquitto-config
      #     configMap:
      #       name: mosquitto-config
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: default
  labels:
    app: redis
  # namespace: envds-clear
spec:
  selector:
    app: redis
  ports:
  - name: http
    protocol: TCP
    port: 6379
    targetPort: 6379
  # - name: https
  #   port: 8883
  #   targetPort: 8883
  # type: LoadBalancer
  # type: ClusterIP
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: mosquitto-ingress
#   namespace: envds-clear
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
# spec:
#   rules:
#   - host: mosquitto.local
#     http:
#       paths:
#         - pathType: Prefix
#           path: "/"
#           backend:
#             service:
#               name: mosquitto
#               port: 
#                 number: 9001